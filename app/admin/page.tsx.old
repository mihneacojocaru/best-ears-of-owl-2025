'use client'

import { useEffect, useState } from 'react'
import { useRouter } from 'next/navigation'
import { createClient } from '@/lib/supabase/client'
import { Category, RankingResult } from '@/lib/types'

export default function AdminPage() {
  const [categories, setCategories] = useState<Category[]>([])
  const [selectedCategory, setSelectedCategory] = useState('')
  const [results, setResults] = useState<RankingResult[]>([])
  const [loading, setLoading] = useState(false)
  const [user, setUser] = useState<any>(null)
  const router = useRouter()
  const supabase = createClient()

  useEffect(() => {
    checkUser()
    fetchCategories()
  }, [])

  async function checkUser() {
    const { data: { user } } = await supabase.auth.getUser()
    if (!user) {
      router.push('/auth/login')
      return
    }
    setUser(user)
  }

  async function fetchCategories() {
    try {
      const response = await fetch('/api/categories')
      const data = await response.json()
      setCategories(Array.isArray(data) ? data : [])
    } catch (error) {
      console.error('Error fetching categories:', error)
      setCategories([])
    }
  }

  async function fetchResults() {
    if (!selectedCategory) return

    setLoading(true)
    try {
      const { data: { session } } = await supabase.auth.getSession()
      
      const response = await fetch(`/api/results?category=${selectedCategory}`, {
        headers: {
          'Authorization': `Bearer ${session?.access_token}`,
        },
      })
      
      const data = await response.json()
      
      if (!response.ok) {
        throw new Error(data.error || 'Fehler beim Laden der Ergebnisse')
      }
      
      setResults(data)
    } catch (error: any) {
      console.error('Error fetching results:', error)
      alert(error.message)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    if (selectedCategory) {
      fetchResults()
    }
  }, [selectedCategory])

  const podium = results.slice(0, 3)

  return (
    <main className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-12 px-4">
      <div className="container mx-auto max-w-4xl">
        <div className="mb-8">
          <button
            onClick={() => router.push('/')}
            className="text-gray-600 hover:text-primary mb-4"
          >
            ‚Üê Zur√ºck
          </button>
          <h1 className="text-4xl font-bold text-primary mb-2">
            üèÜ Admin Dashboard
          </h1>
          <p className="text-gray-600">
            Ergebnisse und Rankings anzeigen
          </p>
        </div>

        {user && (
          <div className="mb-6 text-sm text-gray-600">
            Angemeldet als: <span className="font-semibold">{user.email}</span>
          </div>
        )}

        <div className="card mb-8">
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Kategorie ausw√§hlen
          </label>
          <select
            value={selectedCategory}
            onChange={(e) => setSelectedCategory(e.target.value)}
            className="select-field"
          >
            <option value="">-- Kategorie w√§hlen --</option>
            {categories.map((cat) => (
              <option key={cat.id} value={cat.id}>
                {cat.name}
              </option>
            ))}
          </select>
        </div>

        {loading && (
          <div className="text-center py-12">
            <div className="text-xl text-primary">L√§dt Ergebnisse...</div>
          </div>
        )}

        {!loading && selectedCategory && results.length === 0 && (
          <div className="card text-center">
            <p className="text-gray-600">
              Noch keine Votes f√ºr diese Kategorie vorhanden.
            </p>
          </div>
        )}

        {!loading && results.length > 0 && (
          <>
            {/* Podium */}
            <div className="mb-12">
              <h2 className="text-2xl font-bold text-primary mb-6 text-center">
                Podium
              </h2>
              <div className="flex items-end justify-center gap-4 mb-8">
                {/* 2nd Place */}
                {podium[1] && (
                  <div className="flex-1 max-w-xs">
                    <div className="bg-gray-300 rounded-t-lg p-6 text-center h-40 flex flex-col justify-end">
                      <div className="text-4xl mb-2">ü•à</div>
                      <div className="text-xl font-bold">2. Platz</div>
                    </div>
                    <div className="bg-white p-4 rounded-b-lg shadow-md">
                      <h3 className="font-bold text-lg mb-1">
                        {podium[1].song_name}
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        {podium[1].points} Punkte
                      </p>
                      <p className="text-xs text-gray-500">
                        {podium[1].best_votes} √ó Best, {podium[1].nice_votes} √ó Nice
                      </p>
                    </div>
                  </div>
                )}

                {/* 1st Place */}
                {podium[0] && (
                  <div className="flex-1 max-w-xs">
                    <div className="bg-yellow-400 rounded-t-lg p-6 text-center h-56 flex flex-col justify-end">
                      <div className="text-5xl mb-2">ü•á</div>
                      <div className="text-2xl font-bold">1. Platz</div>
                    </div>
                    <div className="bg-white p-4 rounded-b-lg shadow-lg">
                      <h3 className="font-bold text-xl mb-1">
                        {podium[0].song_name}
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        {podium[0].points} Punkte
                      </p>
                      <p className="text-xs text-gray-500">
                        {podium[0].best_votes} √ó Best, {podium[0].nice_votes} √ó Nice
                      </p>
                      {podium[0].song_link && (
                        <a
                          href={podium[0].song_link}
                          target="_blank"
                          rel="noopener noreferrer"
                          className="text-sm text-blue-600 hover:underline mt-2 inline-block"
                        >
                          üîó Song anh√∂ren
                        </a>
                      )}
                    </div>
                  </div>
                )}

                {/* 3rd Place */}
                {podium[2] && (
                  <div className="flex-1 max-w-xs">
                    <div className="bg-orange-300 rounded-t-lg p-6 text-center h-32 flex flex-col justify-end">
                      <div className="text-3xl mb-2">ü•â</div>
                      <div className="text-lg font-bold">3. Platz</div>
                    </div>
                    <div className="bg-white p-4 rounded-b-lg shadow-md">
                      <h3 className="font-bold text-lg mb-1">
                        {podium[2].song_name}
                      </h3>
                      <p className="text-sm text-gray-600 mb-2">
                        {podium[2].points} Punkte
                      </p>
                      <p className="text-xs text-gray-500">
                        {podium[2].best_votes} √ó Best, {podium[2].nice_votes} √ó Nice
                      </p>
                    </div>
                  </div>
                )}
              </div>
            </div>

            {/* Full Rankings */}
            <div className="card">
              <h2 className="text-2xl font-bold text-primary mb-4">
                Vollst√§ndiges Ranking
              </h2>
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead>
                    <tr className="border-b-2 border-gray-200">
                      <th className="text-left py-3 px-4">Platz</th>
                      <th className="text-left py-3 px-4">Song</th>
                      <th className="text-center py-3 px-4">Punkte</th>
                      <th className="text-center py-3 px-4">Best</th>
                      <th className="text-center py-3 px-4">Nice</th>
                      <th className="text-left py-3 px-4">Link</th>
                    </tr>
                  </thead>
                  <tbody>
                    {results.map((result, index) => (
                      <tr
                        key={result.submission_id}
                        className="border-b border-gray-100 hover:bg-gray-50"
                      >
                        <td className="py-3 px-4 font-bold">
                          {index + 1}.
                        </td>
                        <td className="py-3 px-4">
                          <div className="font-semibold">{result.song_name}</div>
                          <div className="text-xs text-gray-500">
                            {result.user_email}
                          </div>
                        </td>
                        <td className="py-3 px-4 text-center font-bold text-primary">
                          {result.points}
                        </td>
                        <td className="py-3 px-4 text-center">
                          {result.best_votes}
                        </td>
                        <td className="py-3 px-4 text-center">
                          {result.nice_votes}
                        </td>
                        <td className="py-3 px-4">
                          {result.song_link && (
                            <a
                              href={result.song_link}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="text-blue-600 hover:underline text-sm"
                            >
                              üîó Link
                            </a>
                          )}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </>
        )}
      </div>
    </main>
  )
}
